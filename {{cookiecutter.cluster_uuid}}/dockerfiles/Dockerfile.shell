# syntax=docker/dockerfile:experimental
# https://www.firehydrant.io/blog/developing-a-ruby-on-rails-app-with-docker-compose/
# CHECK!!!!
# https://github.com/medicharlachiranjeevi/phusion-passenger-docker-rails/blob/master/Dockerfile

# https://blog.carbonfive.com/2015/03/17/docker-rails-docker-compose-together-in-your-development-workflow/

ARG COMPUTE_IMAGE
FROM ${COMPUTE_IMAGE} AS final
# GEMS
# https://bundler.io/v2.0/guides/bundler_docker_guide.html
ARG GEM_HOME=/cache/gem
ARG NPM_CONFIG_PREFIX=/cache/npm
# build dir in the container
ARG LOCAL_ARVADOS_SRC=/usr/src/arvados
ARG APP_NAME
ARG APP_DIR
ARG APP_SUBDIR=${APP_DIR}/${APP_NAME}

ENV DEBIAN_FRONTEND noninteractive
ENV BUNDLE_PATH $GEM_HOME
ENV PATH $BUNDLE_PATH/bin:$PATH
ENV PORT $PORT

# These are the ones arvbox uses
ENV GEM_HOME ${GEM_HOME}
ENV GEM_PATH ${GEM_HOME}
ENV NPM_CONFIG_PREFIX ${NPM_CONFIG_PREFIX}
ENV npm_config_cache_min ${NPM_CACHE_MIN}
# ENV R_LIBS /var/lib/Rlibs

RUN --mount=type=cache,target=/var/cache/apt,sharing=locked,id=cache-apt \
    --mount=type=cache,target=/var/lib/apt,sharing=locked,id=lib-apt \
    apt-get update \
 && apt-get --no-install-recommends install --yes gnupg \
 && /usr/bin/apt-key adv --keyserver keyserver.ubuntu.com --recv 1078ECD7 \
 && echo "deb http://apt.arvados.org/buster buster main" | tee /etc/apt/sources.list.d/arvados.list \
 && apt-get update \
 && apt-get install --yes \
                    --no-install-recommends \
                    arvados-client \
                    arvados-src \
                    bundler \
                    ca-certificates \
                    curl \
                    dmsetup \
                    dumb-init \
                    g++ \
                    gcc \
                    git \
                    iptables \
                    jq \
                    libcurl4 \
                    libcurl4-gnutls-dev \
                    libdevmapper1.02.1 \
                    libfuse2 \
                    libpam-arvados-go \
                    libpq-dev \
                    libruby \
                    libxml2 \
                    libxml2-dev \
                    make \
                    npm \
                    postgresql-client \
                    python-dev \
                    python3-arvados-cwl-runner \
                    python3-arvados-fuse \
                    python3-arvados-python-client \
                    ruby \
                    ruby-dev \
                    shellinabox \
                    util-linux \
                    vim \
                    zlib1g-dev \
 # && ln -s /usr/bin/ruby2.7 /usr/local/bin/ruby \
 # && ln -s /usr/lib/x86_64-linux-gnu/libruby-2.5.so.2.5.5 /usr/local/lib/libruby.so.2.5 \
 && gem install arvados-cli \
 && apt-get purge --yes \
                    bundler \
                    g++ \
                    gcc \
                    git \
                    libcurl4-gnutls-dev \
                    libpq-dev \
                    libxml2 \
                    libxml2-dev \
                    make \
                    npm \
                    postgresql-client \
                    python-dev \
                    ruby-dev \
                    zlib1g-dev 

COPY --from=docker:latest /usr/local/bin/dockerd /usr/local/bin/dockerd
COPY --from=docker:latest /usr/local/bin/docker /usr/local/bin/docker
COPY --from=docker:latest /usr/local/bin/runc /usr/local/bin/runc
COPY --from=docker:latest /usr/local/bin/containerd /usr/local/bin/containerd
COPY --from=docker:latest /usr/local/bin/containerd-shim /usr/local/bin/containerd-shim
COPY --from=docker:latest /usr/local/bin/containerd-shim-runc-v2 /usr/local/bin/containerd-shim-runc-v2
COPY configs/build/LAST_BUILD_INFO /BUILD_INFO

# Ruby CLI tools need CA 
COPY {{cookiecutter.filename_ca_cert}} /etc/ssl/certs 
RUN c_rehash

ENTRYPOINT ["/usr/bin/dumb-init", "--"]
